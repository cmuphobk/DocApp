@using DocAppBackendWithAuth.Models;
@model UniversalViewModel
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="@Url.Content("~/Content/css/managedepartament.css")" rel="stylesheet" type="text/css" />
}

<div class="container body-content">
    <h2>@ViewBag.Title</h2>


    <div class="row">
        <div class="col-md-12">
            <input type="text" class="name_dep" placeholder="Название" data-bind="value:name" />
            <div class="block_img">
                <label for="image" class="image_label">Картинка:</label>
                <img id="image" />
                <input id="file" type="file" accept="image/*" data-bind="event: { change: $root.fileUpload }" style="display:none;" />
            </div>
            <textarea placeholder="Описание" class="text_area" data-bind="value:description"></textarea>
            <button class="save_button" data-bind="event:{click:function(data,event){saveEvent(data,event);}}">Сохранить</button>
            </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        function ViewModel() {
            var self = this;

            self.curDiag = ko.observable('');

            self.modelId = "@(Model.id.HasValue?Model.id: null)";

            self.name = ko.observable("@Model.name");
            self.description = ko.observable("");

            self.imageData = null;

            self.fileUpload = function (data, e) {

                var file = e.target.files[0];
                //var result = e.target.result;
                var reader = new FileReader();
                reader.readAsArrayBuffer(file);
                reader.onload = function () {
                    self.imageData = _arrayBufferToBase64(this.result);
                };
            }


            self.saveEvent = function (data, event) {
                var model = {};
                model.id = self.modelId == "" ? null : self.modelId;
                model.name = data.name();
                model.image = self.imageData;
                model.descripton = self.description();

                $.ajax({
                    type: 'POST',
                    url: '/api/Neural/Diagnos',
                    beforeSend: function (xhr) {
                        var token = sessionStorage.getItem(tokenKey);
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    contentType: 'application/json',
                    data: JSON.stringify(model),
                    success: function (data) {
                        handleSuccess();
                        location.href = "@Url.Action("ManageSystem", "Home")";
                    },
                    fail: function (data) {
                        handleException();
                    }
                });

            }


            $('#image').click(function () {
                $('#file').click();
            });
            $('#file').change(function () {
                var path = URL.createObjectURL(this.files[0]);
                $("#image").fadeIn("fast").attr('src', path);
            });
            self.generateView = function () {

                var idDiag = self.modelId == "" ? null : self.modelId;
                if (idDiag) {
                    self.getDiagnos(idDiag, function (res) {
                        self.curDiag(res[0]);
                        if (res[0].image) {
                            document.getElementById("image").src = "data:image/png;base64," + res[0].image;
                            self.imageData = res[0].image;
                        } else {
                            document.getElementById("image").src = "../Content/img/dummy.jpg";
                            self.imageData = null;
                        }
                        if (res[0].descripton) {
                            self.description(res[0].descripton);
                        }

                    });
                } else {
                    document.getElementById("image").src = "../Content/img/dummy.jpg";
                    self.imageData = null;
                }


            }

            //web callback

            self.getDiagnos = function (idDiag, callback) {
                idDiag = idDiag == "" ? null : idDiag;
                $.ajax({
                    type: 'GET',
                    url: '/api/Neural/Diagnoses?id=' + idDiag,
                    async: false,
                    beforeSend: function (xhr) {
                        var token = sessionStorage.getItem(tokenKey);
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    success: function (data) {
                        //self.departaments(data);
                        typeof (callback) == 'function' && callback(data);

                    },
                    fail: function (data) {
                        console.log(data);
                    }
                });
            }

        }
        var viewModel = new ViewModel();
        viewModel.generateView();

        ko.applyBindings(viewModel);
    });
</script>